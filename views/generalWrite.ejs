<!DOCTYPE html>
<html lang="en">
<!-- Bootstrap core JavaScript -->
<script src="/views/vendor/jquery/jquery.min.js"></script>
<script src="/views/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>
<!-- Plugin JavaScript -->
<script src="/views/vendor/jquery-easing/jquery.easing.min.js"></script>
<!-- Custom scripts for this template -->
<head>
    <meta charset="utf-8">
    <!-- 화면 꽉채우기 -->
    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no, maximum-scale=1.0, minimum-scale=1.0">
    <title>HEY DUDE</title>
    <!-- Bootstrap core CSS -->
    <link href="/views/vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet">
    <!-- Custom fonts for this template -->
    <link href="https://fonts.googleapis.com/css?family=Saira+Extra+Condensed:500,700" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css?family=Muli:400,400i,800,800i" rel="stylesheet">
    <link href="https://cdn.materialdesignicons.com/4.5.95/css/materialdesignicons.min.css" rel="stylesheet">
    <link href="/views/vendor/fontawesome-free/css/all.min.css" rel="stylesheet">
    <link href="/views/css/heydude.css" rel="stylesheet">
</head>
<body class="body-size">
<nav class="navbar navbar-dark bg-primary bar">
    <button type="button" onclick="PageToHome()" class="btn" style="border: none; color: white; font-size: larger">Hey Dude</button>
    <div>
        <button type="button" onclick="SignOut()" class="btn btn-outline-success my-2 my-sm-0" style="border: none; color: white">Sign Out</button>
    </div>
</nav>
<div class="content-scroll">
    <!--요안에만 채우시면됩니다.-->
    <div class="card-header"><h2>Write</h2></div>
    <div class="card-body">
        <div class="container">
            <form action="/home/board/generalwrite" method="post">
                <form role="form">
                    <div class="form-group">
                        <label for="subject">Title:</label>
                        <input type="text" class="form-control" name ="title" id="title" placeholder="Enter title">
                    </div>
                    <div class="form-group">
                        <label for="content">Contents:</label>
                        <textarea class="form-control" rows="10" name="contents" id="contents" placeholder="Enter Contents"></textarea>
                    </div>
                    <div class="form-group">
                        <div><img id="myimage"></div>
                        <label for="file">File upload:</label><br>
                        <input type="file" id="file" style="background-color: white; color: black">
                    </div>
                    <div class="center-block" style="text-align: right">
                        <input type="submit" value="Submit" id="submit" style="">
                        <input type="reset" value="Reset">
                        <input type="button" value="Back" style="margin-right: 3%" onclick="history.back(1)">
                    </div>
                </form>
            </form>
        </div>
    </div>
</div>
<nav class="navbar navbar-light bar" style="background-color: #e3f2fd; justify-content: center">
    <ul class="nav nav-pills">
        <li class="nav-item">
            <a class="nav-link mdi mdi-home active" href="/home"></a>
        </li>
        <li class="nav-item">
            <a class="nav-link mdi mdi-account-group" href="/profile/community"></a>
        </li>
        <li class="nav-item">
            <a class="nav-link mdi mdi-account-plus" href="/request/view"></a>
        </li>
        <li class="nav-item">
            <a class="nav-link mdi mdi-comment" href="/chat/chatRoom"></a>
        </li>
        <li class="nav-item">
            <a class="nav-link mdi mdi-account" href="/mypage"></a>
        </li>
    </ul>
</nav>

</body>
</html>
<!-- The core Firebase JS SDK is always required and must be listed first -->
<script src="https://www.gstatic.com/firebasejs/7.5.0/firebase-app.js"></script>

<!-- TODO: Add SDKs for Firebase products that you want to use
     https://firebase.google.com/docs/web/setup#available-libraries -->
<script src="https://www.gstatic.com/firebasejs/7.5.0/firebase-analytics.js"></script>
<script src="https://www.gstatic.com/firebasejs/7.5.0/firebase-storage.js"></script>

<script>
    // Your web app's Firebase configuration
    var firebaseConfig = {
        apiKey: "AIzaSyDbzlQSjsx4Pg3zj7EFAU6I-t6TmP1XaW4",
        authDomain: "hey-dude-da806.firebaseapp.com",
        databaseURL: "https://hey-dude-da806.firebaseio.com",
        projectId: "hey-dude-da806",
        storageBucket: "hey-dude-da806.appspot.com",
        messagingSenderId: "364253299049",
        appId: "1:364253299049:web:da6cb2975e332c5221bdf8",
        measurementId: "G-E3K1WF6VP5"
    };
    // Initialize Firebase
    firebase.initializeApp(firebaseConfig);
    firebase.analytics();

</script>


<script>
    function PageToHome() {
        location.href="/home"
    }
    function SignOut() {
        $.ajax({
            type:"GET",
            url: "/user/signout" ,
            data: {
            }
        }).done(function(result) {
            if (result) {
                location.replace('/signin');
            } else {
                location.reload();
            }
        });
    }
    function PageToSignIn() {
        location.replace("/signin")
    }
    function PageToSignUp() {
        location.replace("/signup")
    }

    let fileName = '1'
    let URL=''

    var fileButton = document.getElementById('file');
    fileButton.addEventListener('change', function(e){
        // Get file
        var file = e.target.files[0];
        // Create a storage ref
        var storageRef = firebase.storage().ref("/generalBoard/" + fileName + '.jpg');
        // Upload file
        var task = storageRef.put(file);
        // Listen for state changes, errors, and completion of the upload.
        task.on(firebase.storage.TaskEvent.STATE_CHANGED, // or 'state_changed'
            function(snapshot) {
                // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded
                var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;
                console.log('Upload is ' + progress + '% done');
                //uploader.value = progress;
                switch (snapshot.state) {
                    case firebase.storage.TaskState.PAUSED: // or 'paused'
                        console.log('Upload is paused');
                        break;
                    case firebase.storage.TaskState.RUNNING: // or 'running'
                        console.log('Upload is running');
                        break;
                }
            }, function(error) {
                // A full list of error codes is available at
                // https://firebase.google.com/docs/storage/web/handle-errors
                switch (error.code) {
                    case 'storage/canceled':
                        // User canceled the upload
                        break;
                    case 'storage/unknown':
                        // Unknown error occurred, inspect error.serverResponse
                        break;
                }
            }, function() {
                // Upload completed successfully, now we can get the download URL
                uploadTask.snapshot.ref.getDownloadURL().then(function(downloadURL) {
                    console.log('File available at', downloadURL);
                });
            });
        storageRef.getDownloadURL().then(function(url) {
            // This can be downloaded directly:
            var xhr = new XMLHttpRequest();
            xhr.responseType = 'blob';
            xhr.onload = function(event) {
                var blob = xhr.response;
            };
            xhr.open('GET', url);
            xhr.send();
            // Or inserted into an <img> element:
            var img = document.getElementById('myimage');
            img.src = url;
            URL = url;
        }).catch(function(error) {
            // Handle any errors
            // A full list of error codes is available at
            // https://firebase.google.com/docs/storage/web/handle-errors
            switch (error.code) {
                case 'storage/object-not-found':
                    // File doesn't exist
                    break;
                case 'storage/canceled':
                    // User canceled the upload
                    break;
                case 'storage/unknown':
                    // Unknown error occurred, inspect the server response
                    break;
            }
        });
    });

    $("#submit").click(function () {
        $.ajax({
            type:"POST",
            url: "/profile/set" ,
            data: {
                url : URL
            }
        }).done(function(result) {
            alert(result);
            if (result) {
                location.href = '/profile/myProfile';
            } else {
                showErrorMsg($('#submit_feedback'), "Please try again.");
            }
        });
    })
</script>

<style>
    input{
        font-size: large;
        border-radius: 5px;
        margin-right: 5px;
        border: 1px solid #7abaff;
        background-color: skyblue;
        color:white;
        padding: 5px;
    }
    input:hover{
        color: #80bdff;
        background-color: rgba(0,0,0,0);
    }
</style>
